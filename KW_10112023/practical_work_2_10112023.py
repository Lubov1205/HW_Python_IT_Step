# Задача №1 (2)
# Напишите программу, где я ввожу целое число n, и, если оно больше 20,
# поделите его на 6, иначе умножьте на 6.
n = int(input())
if n>20:
    print(n/6)
else:
    print(n*6)

# Задача №2(2)
# Напишите программу, где я ввожу целое число n, и если оно является положительным,
# то прибавьте к нему 1; если отрицательным, то вычесть из него 2; если нулевым,
# то заменить его на 10. Выведите полученное число.
n = int(input())
if n>0:
    print(n+1)
elif n<0:
    print(n-2)
elif n==0:
        print

# Задача №3(2)
# Напишите программу, где я ввожу целые числа a и b, если их значения не равны,
# то присвоить каждой переменной сумму этих значении, а если равны, то присвоить
# нулевые значения. Вывести новые значения переменных.
a = int(input())
b = int(input())
if a!=b:
    print(a+b,b+a)
elif a==b:
    print(0,0)

#  Задача №4(2)
# Напишите программу, где ввожу число n, и если оно является положительным,
# то прибавьте к нему 1; в противном случае не изменять его. Выведите полученное число.
n = int(input())
if n > 0:
    print(n+1)
else:
    print(n)

# Задача №5(2)
# Напишите программу, где я ввожу целостное число a и b, и если a делиться на b, то программа должна вывести divisible иначе not divisible.
# *** Подсказка: Есть такой оператор %, % показывает остаток числа.

a = int(input())
b = int(input())
if a%b==0:
    print("divisible")
else:
    print("not divisible")

# Условия: if, else, elif. Блоки, отступы

# Задача №1.
# Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки,
# пересыпать тоже вредно и не стоит спать более B часов. Сейчас Аня спит H часов в сутки.
# Если режим сна Ани удовлетворяет рекомендациям передачи “Здоровье”, выведите “Это нормально”.
# Если Аня спит менее A часов, выведите “Недосып”, если же более B часов, то выведите “Пересып”.
# Получаемое число A всегда меньше либо равно B.
# На вход программе в три строки подаются переменные в следующем порядке: A, B, H.
# Обратите внимание на регистр символов: вывод должен в точности соответствовать описанному в задании,
# т. е. если программа должна вывести "Пересып", выводы программы "пересып", "ПЕРЕСЫП", "ПеРеСыП"
# и другие не будут считаться верными.
# Это первое не самое тривиальное задание на условное выражение. В
# случаях, когда разбить исполнение программы на несколько направлений,
# стоит внимательно обдумать все условия, которые нужно использовать.
# Особое внимание стоит уделить строгости используемых условных операторов.
# Для того, чтобы понимать, какой из них стоит использовать, внимательно прочитайте условие задания.
A = int(input())
B = int(input())
H = int(input())
if A < H < B:
    print("Это нормально")
elif A<H>B:
    print("Пересып")
elif A > H < B:
    print("Недосып")


# Задача №2.
# Требуется определить, является ли данный год високосным.
# Напомним, что високосными годами считаются те годы,
# номер которых либо кратен 4, но при этом не кратен 100, либо кратен 400
# (например, 2000-й год являлся високосным, а 2100-й будет не високосным годом).
# Программа должна корректно работать на числах 1900≤n≤3000.
# Выведите "Високосный" в случае, если считанный год является високосным и
# "Обычный" в обратном случае (не забывайте проверять регистр выводимых программой символов).
year = int(input("Введите год (от 1900 до 3000): "))
if not (1900 <= year <= 3000):
    print("Данные введены не верно")
elif (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        print("Год является високосным")
else:
    print("Год обычный")

# Задача №3
# Напишите программу, принимающую на вход целое число, которая выводит True, если переданное
# значение попадает в интервал (- 15,12]∪(14,17)∪[19,+∞)
# и False в противном случае (регистр символов имеет значение).
# Обратите внимание на разные скобки, используемые для обозначения интервалов.
# В задании используются полуоткрытые и открытые интервалы
number = int(input())
if (-15 < number <= 12) or (14 < number < 17) or (number>=19):
    print("True")
else:
    print("False")

# Задача №4
# Жители страны Малевии часто экспериментируют с планировкой комнат.
# Комнаты бывают треугольные, прямоугольные и круглые.
# быстро вычислять жилплощадь, требуется написать программу, на вход которой подаётся тип фигуры
# комнаты и соответствующие параметры, которая бы выводила площадь получившейся комнаты.
# Для числа π в стране Малевии используют значение 3.14.

shape = input("Введите тип фигуры комнаты (треугольник, прямоугольник, круг):")
if shape in ["треугольник","прямоугольник","круг"]:
    if shape == "треугольник":
        a = float(input("Введите размер 1 стороны треугольника:"))
        b = float(input("Введите размер 2 стороны треугольника:"))
        c = float(input("Введите размер 3 стороны треугольника:"))
        s = (a + b + c) / 2
        d = math.sqrt(s * (s - a) * (s - b) * (s - c))
        print("Площадь треугольника равна:",d)
    elif shape == "прямоугольник":
        a = float(input("Введите длину прямоугольника:"))
        b = float(input("Введите ширину прямоугольника:"))
        print("Площадь прямоугольника равно:",a*b)
    elif shape == "круг":
        r = float(input("Введите радиус круга:"))
        p = 3.14
        s = p*r**2
        print("Площадь круга равна:",s)


# Задача №5
# В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов
# написали для него программу, по которой робот, когда заходит в комнату,
# считает количество программистов в ней и произносит его вслух: "n программистов".
# Для того, чтобы это звучало правильно, для каждого n нужно использовать верное окончание слова.
# Напишите программу, считывающую с пользовательского ввода целое число n (неотрицательное),
# выводящее это число в консоль вместе с правильным образом изменённым словом «программист»,
# для того чтобы робот мог нормально общаться с людьми, например, 1 программист, 2 программиста, 5 программистов.
# В комнате может быть очень много программистов. Проверьте, что ваша программа правильно обработает все случаи,
# как минимум до 1000 человек.
# Если ваше решение не проходит какой-то тест, это значит, что вы не рассмотрели какой-то из случаев входных данных
# (число программистов 10000≤n≤1000). Обязательно проверяйте свои решения на дополнительных значениях,
# а не только на тех, что приведены в условии задания.
n = int(input("Введите количество программистов:"))
if n % 10 == 1 and n % 100 != 11:
    print("В помещении",n,"программист")
elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
    print("В помещении",n,"программиста")
else:
    print("В помещении",n,"программистов")

